// Example variation https://www.ncbi.nlm.nih.gov/clinvar/variation/208366
// variation_id: 208366      <-- preferred variation identifier from author
// allele_id: 204595         <-- alt variation identifier from author
// label: NM_004700.4(KCNQ4):c.803CCT[1] (p.Ser269del)     <-- preferred label
// spdi: NC_000001.11:40819438:CTCCTCCT:CTCCT      <-- expression
// xrefs
//     ClinGen: CA347424           <-- exact matching 3rd party identifier
//     dbSNP: rs797044966          <-- xref
// variation_type: Microsatellite  <-- extension - clinvar decoration
// cytoloc: 1p34.2                 <-- extension? - possibly
// hgvs:                           <-- nomenclatiure expressions - members
//     NC_000001.11:g.40819441CCT[1]       <-- b38 defining_context
//     NC_000001.10:g.41285113CCT[1]       <-- b37
//     NG_008139.3:g.40655CCT[1]
//     LRG_1378:g.40655CCT[1]
//     NM_004700.4(KCNQ4):c.803_805CCT[1] MANE SELECT
//     NM_004700.4:c.803CCT[1] MANE SELECT
//     NM_004700.3:c.806_808del
//     NM_004700.3:c.806_808delCCT
//     NM_172163.3:c.803CCT[1]
//     LRG_1378t1:c.803CCT[1]
// genes 
// symbol  entrez id                               omim id                              HI  TS  within #vars    all #vars
// KCNQ4   https://www.ncbi.nlm.nih.gov/gene/9132  http://www.omim.org/entry/603537	    -	-	292             312
// -- version 2.0alpha1 - fully decorated clinvar variation (canonical variation) 

// DISCLAIMER: While the data in the example below attempts represent a valid clinvar record, the ga4gh digests and 
//.   identifiers are not accurate to the VRS 2.0 alpha spec because not all the tooling for generating the proper
//    digests has been completed yet. Please do not presume these digests and ids are legitamite.

{
    "sequence_references": {
        // it is likely that an implementer would create key names that are unique by using the individual entity's id or digest.
        // but we are being deliberate in showing that the key name can be anything as long as it is uniquely referencable 
        // see https://json-schema.org/understanding-json-schema/reference/string.html#resource-identifiers 
        "seqref1": {

            // NOTE the use of the "SQR" prefix instead of the "SQ" prefix that is 'owned' by refget.
            // we aim to use the same exact digest as refget, but we think it is wise to define a separate prefix
            // since we are defining a concept as part of vrs 2 that represents additional semantics around refget's SQ
            "id": "ga4gh:SQR.Ya6Rs7DHhDeg7YaOSg1EoNi3U_nQ9SvO",
            "digest": "Ya6Rs7DHhDeg7YaOSg1EoNi3U_nQ9SvO",
            // SequenceReference (SQR) is used by VRS 2 to provide distinction from Sequence (SQ) in refget.
            "type": "SequenceReference",
            // refget_id is required... (NOTE: VRS SQR uses the refget SQ digest in a 1-to-1 mapping 100% of the time)
            "refget_id": "ga4gh:SQ.Ya6Rs7DHhDeg7YaOSg1EoNi3U_nQ9SvO",
            // all identifiable concepts in VRS will have the option for a "label" attribute.
            "label": "NC_000001.11",
            // mappings as an array of Mapping concepts on all identifiable entities?
            // if this sequence was referenced multiple times it should be decorated in one and only one place...
            // if there was a reason to have 2 different decorated representations of the same sequence (or location or allele) 
            // then you would need to use the "id" attribute as a differentiator and place the computed identifier in the "identifiers" element.
            "mappings": [
                {
                    "system": "https://www.ncbi.nlm.nih.gov/nuccore/",
                    "id": "NC_000001.11",
                    "relation": "exactMatch"
                }
            ],
            // Discussion #1: residue_type as a Coding or a CURIE? (proposed optional attribute on sequence)
            "residue_type": {
                "system":"https://identifiers.org/SO:",
                "id":"0000348",
                "label":"nucleid_acid"
            },
            // Discussion #2: chromosome as an enumeration [1-22, X, Y, MT] (proposed optional attribute on sequence)
            "chromosome": "1",
            // Discussion #3: assembly as a Coding (proposed optional attribute on sequence)
            "assembly": {
                "system": "https://www.ncbi.nlm.nih.gov/assembly/",
                "id": "GCF_000001405.26",
                "label": "GRCh38"
            }
        },
        // an incomplete example of another type of sequence (i.e. NM_004700.4)
        // again, the key name is irrelevant and has no special meaning, it is simply used for referencing elsewhere 
        "maneselect1": {
            "id": "ga4gh:SQR.BPxYAcrVg1O8DphVJdOCfGLXHKjpol5N",
            "digest": "BPxYAcrVg1O8DphVJdOCfGLXHKjpol5N",
            "type": "SequenceReference",
            "refget_id":"ga4gh:SQ.BPxYAcrVg1O8DphVJdOCfGLXHKjpol5N",
            "label": "NM_004700.4",
            "residue_type": {
                "system":"https://identifiers.org/SO:",
                "id":"0000348",
                "label":"nucleid_acid"
            }
            // discussion #9: Should we make "mane select" and "mane plus clinical" first class attributes?
        }
    },
    // these are the contextual (VRS) variations AND categorical "canonical" clinvar variations that may be referenced
    "variations": {
        // var1 is the b38 genomic contextual allele for clinvar variation 208366, which is the subject of the scv example below
        "var1": {
            "digest": "Ti7zPciQelW7jTfgg-uzjZpxosnGzROK",
            "id": "ga4gh:VA.Ti7zPciQelW7jTfgg-uzjZpxosnGzROK",
            "type": "Allele",
            "location": {
                "id": "ga4gh:VSL.5lPU1ZzNnkDe-9ltOWXvcp2td9sM9CHr",
                "digest": "5lPU1ZzNnkDe-9ltOWXvcp2td9sM9CHr",
                "type": "SequenceLocation",
                // NOTE: we are changing from the vrs 1.x "sequence_id" attribute to a fully-defined "sequence" concept.
                "sequence": "#/sequence_reference/seqref1",
                "start": 40819438,
                // Discussion #4: Should we rename "end" to "stop" in the vrs 2 model? GATK and SV seems to favor start-stop while many other tools favor start-end to describe intervals - does it matter?
                "stop": 40819446
            },
            "state": {
                // this is a "NEW" vrs 2 state since this has a repeating sub unit.
                "repeating_sub_unit": 3,
                "type": "ReferenceLengthExpression",
                "value": 5
            },
            "expressions": [
                {
                    "syntax": "hgvs.g",
                    "value": "NC_000001.11:g.40819441CCT[1]"
                },
                {
                    "syntax": "spdi",
                    "value": "NC_000001.11:40819438:CTCCTCCT:CTCCT"
                }
            ]
        },
        // This is the subject clinvar variation of the SCV below.
        "clinvar_208366": {
            "id": "clinvar_208366.2023-04-10",
            // Discussion #5: need a version or recordMetadata to distinguish the changes 
            //                made to this canonicalvariation over time by the author
            "type": "CanonicalVariation",
            // Discussion #10: should this be on the Entity class or somewhere lower in the class hierarchy?
            //                 should the "is_version_of" always be a URI?
            "is_version_of": "https://www.ncbi.nlm.nih.gov/clinvar/variation/208366/", 
            "label": "NM_004700.4(KCNQ4):c.803CCT[1] (p.Ser269del)",
            "mappings": [
                {
                    // discussion #6: should we avoid repeating the "is_version_of" mapping here? (i think yes, but let's make sure)
                    // discussion #7: should or would this take the place of "is_version_of"
                    "system": "https://www.ncbi.nlm.nih.gov/clinvar/variation/",
                    "id": "208366",
                    "mapping": "exactMatch"
                },
                {
                    //  dbSNP: rs797044966   -- use relatedMatch for dbsnp since it is representative for ALL substitutions at a location
                    //                       -- NOTE: SNVs and InDels at the same location get 2 different rsIDs. so var type match is important.
                    "system": "https://www.ncbi.nlm.nih.gov/snp/",
                    "id": "rs797044966",
                    "mapping": "relatedMatch" //(vocab for this is https://www.w3.org/TR/skos-reference/#mapping) if blank defaults to "?"
                },
                {
                    //  VarSome: https://varsome.com/variant/hg38/chr1-40819439-CTC-
                    "system": "https://varsome.com/variant/",
                    "id": "hg38/chr1-40819439-CTC-",
                    "mapping": "relatedMatch"
                },
                {
                    //  ClinGen: CA347424         -- Discussion #11: close or exact match? use close since it isn't identical.
                    "system": "https://reg.clinicalgenome.org/allele/",
                    "id": "CA347424",
                    "mapping": "closeMatch"
                    // },
                    // {
                    //     // maybe we put allele id in extensions for now until clinvar provides a system/namespace for it?
                    //     //  allele_id: 204595         <-- alt variation identifier from author
                    //     "system": "clinvar.allele", // todo - while this is a type of id, there is not a system for this right now 
                    //     // 'https://www.ncbi.nlm.nih.gov/clinvar/?term=204595[AlleleID]' works?
                    //     "id": "204595",
                    //     "mapping": "exactMatch"
                }
            ],
            "defining_context": "#/variations/var1",
            // discussion #8: changing the attribute "members" name to "alternate_contexts" to provide consistency and comparability with "defining_context".
            //                if we do change "members" to "alternate_contexts" would it impact whether or not the "defining_context" does or does not get relisted in this array?
            "alternate_contexts": [
                // is it possible to reference items in an array using json-schema uri-by-reference
                // could this be referenced as 
                // "reference":"#/variations/clinvar_208366/members[1]"
                {
                    "id": "var2",
                    "type": "Allele",
                    "digest": "xxx",
                    "location": {
                        "..": "..."
                    },
                    "state": "...",
                    "expressions": [
                        {
                            "syntax": "hgvs.g",
                            "value": "NC_000001.10:g.41285113CCT[1]"
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[2]"
                {
                    "id": "var3",
                    "type": "Allele",
                    "expressions": [
                        {
                            "syntax": "hgvs.g",
                            "value": "NG_008139.3:g.40655CCT[1]"
                        },
                        {
                            "syntax": "hgvs.g",
                            "value": "LRG_1378:g.40655CCT[1]"
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[3]"
                {
                    "id": "var4",
                    "type": "Allele",
                    "location": {
                        "type": "SequenceLocation",
                        "sequence": {
                            "reference": "#/sequences/maneselect1"
                        },
                        "start": 1,
                        "end": 2
                    },
                    "expressions": [
                        {
                            "syntax": "hgvs.c",
                            "value": "NM_004700.4:c.803CCT[1]"
                        },
                        {
                            "syntax": "hgvs.c",
                            "value": "NM_004700.4:c.806_808del"
                        },
                        {
                            "syntax": "hgvs.c",
                            "value": "LRG_1378t1:c.803CCT[1]"
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[4]"
                {
                    "id": "var5",
                    "type": "Allele",
                    "expressions": [
                        {
                            //     NM_004700.3:c.806_808del
                            //     NM_004700.3:c.806_808delCCT
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[5]"
                {
                    "id": "var6",
                    "type": "Allele",
                    "expressions": [
                        {
                            //     NM_172163.3:c.803CCT[1]
                        }
                    ]
                }
            ],
            // to demonstrate a verbose inlined representation of 
            // all genes associated to a clinvar variation.  
            // We could put the gene(s) on each contextual variation, 
            // but that is not useful in this message I think.
            "genes": [
                {
                    "id": "HGNC:HGNC:6298",
                    "type": "Gene",
                    "label": "KCNQ4", // should be symbol (preferred)
                    "mappings": [
                        {
                            "system": "https://www.genenames.org/data/gene-symbol-report/#!/hgnc_id/",
                            "id": "6298",
                            "mapping": "exactMatch"
                        },
                        {
                            "system": "https://www.ncbi.nlm.nih.gov/gene/",
                            "id": "9132",
                            "mapping": "exactMatch"
                        },
                        {
                            "system": "https://omim.org/entry/",
                            "id": "603537",
                            "mapping": "exactMatch"
                        },
                        {
                            "system": "http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=",
                            "id": "ENSG00000117013",
                            "mapping": "exactMatch"
                        }
                    ],
                    // we need to make a concerted effort to finalize the modeling of "gene" 
                    // but the idea here is that "gene" is a kind of canonical "feature" 
                    // (currently using "SequenceLocation" in place of "Feature") which could 
                    // be represented using an "originating" or "genomic" context that is the 
                    // sequence location a given "authority" uses to define all mapped/aligned 
                    //representations of the gene.  HGNC appears to be the best choice for 
                    // interoperability at this time.
                    "defining_context": {
                        "id": "geneloc1",
                        "digest": "xxxx...",
                        "type": "SequenceLocation",
                        "sequence": {
                            "reference": "#/sequences/seq1"
                        },
                        "start": 40783787,
                        "end": 40840452
                    },
                    "extensions": [
                        {
                            "name": "previous_symbols",
                            "value": [
                                "DFNA2"
                            ]
                        }
                    ]
                }
            ],
            "extensions": [
                {
                    "name": "cytogenetic location",
                    "value": "1p34.2" // could have put this under a specific context (sequenceLocation)
                    // but thought it made sense at the clinvar variation level. 
                    // this makes it easier to find i think.
                },
                {
                    "name": "protein change",
                    "value": "S269del"
                },
                {
                    "name": "clinvar allele id",
                    "value": "204595"
                }
            ]
        }
    },
    /*  
        Condition 
        the causal (or potential causal) condition that is the target trait or set of traits
        for a single assertion

        This concept is not very well standardized in practice today. While there are many
        efforts and aims to standardizing on a single authored nosology, there is no 
        definitive resource. In addition, there are a number of situations whereby the 
        author of an assertion will describe the condition that is the target of the assertion
        using a set of terms which may or may not have identifiers. As such, we will be
        using a fairly basic structure to promote the capture of "disease" and "phenotype" concepts
        within the condition whuile also providing the flexibility to share less structured 
        elements to enable the sharing of assertions that have less than ideal described conditions.

        For clinvar "TraitSet" maps directly to this concept. ClinVar allows 1 to n "Trait" concepts
        within a "TraitSet". We will be utilizing the "Trait" concept as well as an array within 
        "Condition".  
        
        Condition.types
        ClinVar currently has 5 distinct TraitSet.types; Disease, Finding, TraitChoice, DrugResponse, 
        PhenotypeInstruction.  We will be using the generic "Condition" type and sharing the 
        clinvar trait set type in the extensions under the name "clinvar trait set type".
        ClinVar "Disease" would represent the idea that the Trait or Traits comprise a disease,
        The "Finding" type would represent the ideat that the Trait or Traits comprise a phenotype,
        The "TraitChoice" type would indicate that each of the Trait(s) specified is independent
        and not taken as a collective condition set.
        The "DrugResponse" would map to one or more DrugResponse Trait(s), typically 1.
        The "PhenotypeInstruction" is typically the value "See cases" indicating that the case
        data associated with the assertion contains all the information available to discern
        the condition associated with the assertion.

        Trait.types
        ClinVar currently has 6 distinct Trait.types; Disease, Finding, PhenotypeInstruction,
        DrugResponse, BloodGroup, NamedProteinVariant. We will use Disease, Phenotype and Trait to delineate
        only 3 subtypes. Disease will map to Disease, and Finding will map to Phenotype, all others will
        map to Trait as a general type reference (since we are unsure how to handle them at this time).

        The use of extensions is available within both the Condition and Trait concepts.

        We strongly urge the use of Disease and Phenotype Traits (avoiding use of the general Trait type).

        Even though most Conditions will have one and only one Trait we strongly suggest using
        the extensions, mappings, labels, etc... on the Trait concept if it is most directly 
        associated to the values being added.

        Condition attributes should be reserved for values that can only be expressed at the higher
        order concept, which is much easier to discern when multiple traits exist.
    */
    "conditions": {
        "cond_101": {
            "id": "",
            "label":"Nonsyndromic genetic hearing loss",
            "type":"Condition",
            "traits":[
                {
                    "id": "https://www.ncbi.nlm.nih.gov/medgen/CN043648/",
                    "type": "Disease",            // Disease, Phenotype(Finding), Trait ....
                    "label": "Nonsyndromic genetic hearing loss"
                }
            ]
        },
        "cond_other_example": {
            "id": "clinvar_trait_set_id_4890",
            "label": "HEMOGLOBIN MANITOBA",
            "type": "Condition",
            "traits": [
                {
                    "id": "https://www.ncbi.nlm.nih.gov/medgen/C3890767/",
                    "type": "Trait",            // Disease, Phenotype(Finding), Trait ....
                    "label": "HEMOGLOBIN MANITOBA",
                    // discussion #12: if any xrefs are provided we may put them here as "relatedMatch"(es).
                    "mappings": [{
                        "system":"OMIM",
                        "id":"141850.0047",
                        "relation": "relatedMatch"
                        //"db":"OMIM","id":"141850.0047","type":"Allelic variant","ref_field":"name"
                    }],
                    "extensions" : [
                        {
                            "name":"clinvar trait type",
                            "value": "NamedProteinVariant"
                        },
                        {
                            "name":"clinvar submitted trait type",
                            // it is possible for the submitted type to differ from the clinvar normalized type (above)
                            "value": "Disease"
                        },
                        {
                            "name": "clinvar trait id",
                            "value": "12162"
                        }
                        // discussion #12: should we add extensions for submitted xrefs? to distinguish from 
                        // the xrefs that clinvar collates on the normalized version of the trait?
                    ]
                }
            ]
        }
    },
    "classifications": {
        "path": {
            "system": "https://.../clinicalgenome.org/clinvar_classifications/", // need a system for clinvar_classifications terms?
            "id": "100-1",
            "label": "Pathogenic"
        },
        "deleterious": {
            // is this the equivalent of a blank node in JSON-LD?
            "label": "deleterious"
        }
    },
    "statements": {
        // {Provenance - how/where are we going to inject that information so that it is clear to consumers
        //  "this was produced under the CRC policy 1-2-3" ...}
        "SCV001245167.1": {
            "id": "SCV001245167.1.2023-04-10",
            // version? should we have a separate field or embed it in the id or both?
            "is_version_of": "SCV001245167", // align with MBrush's plan - should this be on the Entity class or somewhere lower in the class hierarchy?
            "type": "VariationPathogenicity",
            "variation": "#/variations/clinvar_208366",
            //predicate: "is_causal_for",   this was Alex's decision and Tristan was okay with it. (i'm still thinking about it)  predicate is type, type is predicate
            // -- I do think that the "assessment" should be bundled as a single concept.
            //classification :  Path | Likely Path | Established RA | VUS | Lik Ben ...
            // all of these "codings" need to have the option to put in non-coded values, 
            // we CANNOT pre-code everything or we need a way to pass "uncoded data"
            "classification": "#/classifications/path",
            // direction : supports | refutes | uncertain
            "direction": "uncertain",
            // evidence_strength : definitive | likely | inconclusive (prefer over uncertain plus it helps differentiate)
            // // evidence_score : 0-9  ...   the closer to 0 the more uncertain it is!
            // "score": "0.5",      // the score is coming in acmgv4
            "strength_code": {
                "system": "acmgv3", // need a system for acgmv3.strength terms
                "id": "100-2",
                "label": "inconclusive"
                // since other systems may have altered definitions of the same terms we MUST code this.
            },
            "strength_score": 0.5,
            // TN/LB Desicion: we will likely use a clingen namespace to define codes.
            //penetrance : "risk" | "low" | "high" | leave it blank
            "penetrance": {
                "system": "",
                "id": "",
                "label": "risk" // our own enums? (high, low, risk, or leave this out if truly unable to discern)
            },
            // in a vp statement a condition is ... the condition that the variant is (or is not) causal for (or at risk for)
            "condition": "#/conditions/cond_101",
            // need to think through whether this is structured correctly. but this separable concept is key
            "qualifiers": {
                // mode of inheritance / inheritance pattern (embed with condition?  )
                "inheritancePattern": {
                    "label": "Autosomal dominant inheritance"
                },
                "alleleOrigin": {
                    "label": "germline"
                }
            },
            "contribution": {
                "label": "ClinGen Hearing Loss Variant Curation Expert Panel",
                "system": "https://www.ncbi.nlm.nih.gov/clinvar/submitters/",
                "id": "506744"

            },
            "method": {
                "label": "ClinGen HL ACMG Specifications v1",
                "id":"https://submit.ncbi.nlm.nih.gov/ft/byid/vroiax8b/hearing_loss_acmg_specifications_v1_2018.pdf"
            },
            "description": "The c.806_808delCCT (p.Ser269del) variant in KCNQ4 has been observed in at least 4 probands with hearing loss (PS4_Supporting; PMID: 23399560, 23443030, LMM unpublished data SCV000967428.1). This variant segregated with hearing loss in 12 additional individuals from 1 family (PP1_Strong; PMID: 23443030). The p.Ser269del variant was absent from large population studies (PM2; https://gnomad.broadinstitute.org). This variant causes a change in the length of the protein due to an in-frame deletion between the S5 membrane-spanning domain and the pore region, which is important for protein function (PM4). In summary, this variant meets criteria to be classified as likely pathogenic for autosomal dominant nonsyndromic hearing loss. ACMG/AMP Criteria applied as specified by the Hearing Loss Expert Panel: PP1_Strong, PM2, PM4, PS4_Supporting. ",
            // clinvar review status (star level) - is this a 
            // "special clinvar thing" (i think so) it's not a standard that I know of 
            //evidence 
            //-- pubmed references
            "documents": [
                {
                    "system": "https://pubmed.ncbi.nlm.nih.gov/",
                    "id": "23443030"
                },
                {
                    "system": "https://pubmed.ncbi.nlm.nih.gov",
                    "id":"23399560"
                }
            ],
            // extensions...
            "extensions": [
                {
                    "name": "submitter_classification_info",
                    "value": "deleterious"
                },
                {
                    "name": "submitted_variation_info",
                    "value": "..."
                },
                {
                    "name": "submitted_condition_info",
                    "value": "..."
                }
            ]
            // functional evidence 
            // (should this data be a separate type of assertion or evidence to a classification?) 
            // Much of the functional data in clinvar does not have an associated classification.
        }
    }
}