// Example variation https://www.ncbi.nlm.nih.gov/clinvar/variation/208366
// variation_id: 208366      <-- preferred variation identifier from author
// allele_id: 204595         <-- alt variation identifier from author
// label: NM_004700.4(KCNQ4):c.803CCT[1] (p.Ser269del)     <-- preferred label
// spdi: NC_000001.11:40819438:CTCCTCCT:CTCCT      <-- expression
// xrefs
//     ClinGen: CA347424           <-- exact matching 3rd party identifier
//     dbSNP: rs797044966          <-- xref
// variation_type: Microsatellite  <-- extension - clinvar decoration
// cytoloc: 1p34.2                 <-- extension? - possibly
// hgvs:                           <-- nomenclatiure expressions - members
//     NC_000001.11:g.40819441CCT[1]       <-- b38 defining_context
//     NC_000001.10:g.41285113CCT[1]       <-- b37
//     NG_008139.3:g.40655CCT[1]
//     LRG_1378:g.40655CCT[1]
//     NM_004700.4(KCNQ4):c.803_805CCT[1] MANE SELECT
//     NM_004700.4:c.803CCT[1] MANE SELECT
//     NM_004700.3:c.806_808del
//     NM_004700.3:c.806_808delCCT
//     NM_172163.3:c.803CCT[1]
//     LRG_1378t1:c.803CCT[1]
// genes 
// symbol  entrez id                               omim id                              HI  TS  within #vars    all #vars
// KCNQ4   https://www.ncbi.nlm.nih.gov/gene/9132  http://www.omim.org/entry/603537	    -	-	292             312
// -- version 2.0alpha1 - fully decorated clinvar variation (canonical variation) 
{
    "sequences": {
        "seq1": {
            "id": "ga4gh:SQ.Ya6Rs7DHhDeg7YaOSg1EoNi3U_nQ9SvO",
            "digest": "Ya6Rs7DHhDeg7YaOSg1EoNi3U_nQ9SvO",
            "type": "Sequence",
            // if this sequence was referenced multiple times it should be decorated in one and only one place...
            // if there was a reason to have 2 different decorated representations of the same sequence (or location or allele) 
            // then you would need to use the "id" attribute as a differentiator and place the computed identifier in the "identifiers" element.
            "mappings": [
                {
                    "system": "https://www.ncbi.nlm.nih.gov/nuccore/",
                    "id": "NC_000001.11",
                    "mapping": "exactMatch"
                }
            ],
            "label": "NC_000001.11",
            "residue_type": "SO:0000348",
            "chromosome": "1",
            "assembly": {
                "system": "https://www.ncbi.nlm.nih.gov/assembly/",
                "id": "GCF_000001405.26",
                "label": "GRCh38"
            }
        },
        "maneselect1": {
            "id": "maneselect1",
            "digest": "D09sdf0a22...",
            "type": "Sequence",
            "label": "NC_000001.11",
            "residue_type": "SO:0000348"
        }
    },
    "conditions": {

        "cond1": {

            "label": "condition X",
            "disease" : [],
            "phenotype" : [],
      
            "mappings": [
                {
                    "system": "https://www.ncbi.nlm.nih.gov/medgen/",
                    "id": "123",
                    "mapping": "exactMatch"
                }
            ],

           






            -----
            // these can be medgen ids or ncit ids or other?
            medgen_id...

            
            object: type: "condition", id:  MONDO, medgen, ...
            
            qualified_by : inheritance


            // TN Three categories of data sources for concepts (identified, string terms, ....)
            // 1. live clinical/research data (labs, ehr, off of instruments and applied sop for reporting)
            // 2. federated variant classification data (clinvar - normalized by clinvar submissions processing)
            // 3. curated knowledge (clinvar - from scvs, omim submissions)
            
            // need to support both codings and terms 
            
            // tbd
            // array of codings? or codeableconcepts

            // SET OF QUALIFIERS
            //...


        }
    },
    "variations": {
        "var1": {
            "digest": "Ti7zPciQelW7jTfgg-uzjZpxosnGzROK",
            "id": "ga4gh:VA.Ti7zPciQelW7jTfgg-uzjZpxosnGzROK",
            "location": {
                "digest": "missing",
                "end": 40819446,
                "extensions": [
                    {
                        "name": "ctyogenetic_location",
                        "value": "1p34.2"
                    }
                ],
                "id": "ga4gh:SL.missing",
                "sequence": "#/sequence/seq1",
                "start": 40819438,
                "type": "SequenceLocation"
            },
            "state": {
                "repeating_sub_unit": 3,
                "type": "ReferenceLengthExpression",
                "value": 5
            },
            "type": "Allele"
        },
        "clinvar_208366": {
            "id": "clinvar_208366.2023-04-10",
            // TODO need a version or recordMetadata to distinguish the changes 
            // made to this canonicalvariation over time by the author

            "type": "CanonicalVariation",
            "label": "NM_004700.4(KCNQ4):c.803CCT[1] (p.Ser269del)",
            
            // should this be a mapping with "exactMatch" or do we keep "identifier" for preferred identifier?

            "mappings": [
                {
                    "system": "https://www.ncbi.nlm.nih.gov/clinvar/variation/",
                    "id": "208366",
                    "mapping" : "exactMatch"
                },
                {
                    //  dbSNP: rs797044966          <-- xref - this is not an exact match.
                    "system": "https://www.ncbi.nlm.nih.gov/snp/",
                    "id": "rs797044966",
                    "mapping": "relatedMatch" //(vocab for this is https://www.w3.org/TR/skos-reference/#mapping) if blank defaults to "?"
                },
                {
                    //  VarSome: https://varsome.com/variant/hg38/rs797044966
                    "system": "https://varsome.com/variant/",
                    "id": "hg38/rs797044966",
                    "mapping": "relatedMatch"
                },
                {
                    //  ClinGen: CA347424           <-- exact matching 3rd party identifier
                    "system": "https://reg.clinicalgenome.org/allele/",
                    "id": "CA347424",
                    "mapping": "closeMatch"
                // },
                // {
                //     // maybe we put allele id in extensions for now until clinvar provides a system/namespace for it?
                //     //  allele_id: 204595         <-- alt variation identifier from author
                //     "system": "clinvar.allele", // todo - while this is a type of id, there is not a system for this right now 
                //     // 'https://www.ncbi.nlm.nih.gov/clinvar/?term=204595[AlleleID]' works?
                //     "id": "204595",
                //     "mapping": "exactMatch"
                }
            ],

            "defining_context": "#/variations/var1",

            "members": [
                "#/variations/var1",
                // is it possible to reference items in an array?
                // could this be referenced as 
                // "reference":"#/variations/clinvar_208366/members[1]"
                {
                    "id": "var2",
                    "type": "Allele",
                    "digest": "xxx",
                    "location": {
                        "..": "..."
                    },
                    "state": "...",
                    "expressions": [
                        {
                            "syntax": "hgvs.g",
                            "value": "NC_000001.10:g.41285113CCT[1]"
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[2]"
                {
                    "id": "var3",
                    "type": "Allele",
                    "expressions": [
                        {
                            "syntax": "hgvs.g",
                            "value": "NG_008139.3:g.40655CCT[1]"
                        },
                        {
                            "syntax": "hgvs.g",
                            "value": "LRG_1378:g.40655CCT[1]"
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[3]"
                {
                    "id": "var4",
                    "type": "Allele",
                    "location": {
                        "type": "SequenceLocation",
                        "sequence": {
                            "reference": "#/sequences/maneselect1"
                        },
                        "start": 1,
                        "end": 2
                    },
                    "expressions": [
                        {
                            "syntax": "hgvs.c",
                            "value": "NM_004700.4:c.803CCT[1]"
                        },
                        {
                            "syntax": "hgvs.c",
                            "value": "NM_004700.4:c.806_808del"
                        },
                        {
                            "syntax": "hgvs.c",
                            "value": "LRG_1378t1:c.803CCT[1]"
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[4]"
                {
                    "id": "var5",
                    "type": "Allele",
                    "expressions": [
                        {
                            //     NM_004700.3:c.806_808del
                            //     NM_004700.3:c.806_808delCCT
                        }
                    ]
                },
                // "reference":"#/variations/clinvar_208366/members[5]"
                {
                    "id": "var6",
                    "type": "Allele",
                    "expressions": [
                        {
                            //     NM_172163.3:c.803CCT[1]
                        }
                    ]
                }
            ],
            // to demonstrate a verbose inlined representation of 
            // all genes associated to a clinvar variation.  
            // We could put the gene(s) on each contextual variation, 
            // but that is not useful in this message I think.
            "genes": [
                {
                    "id": "HGNC:HGNC:6298",
                    "type": "Gene",
                    "label": "KCNQ4", // should be symbol (preferred)
                    "mappings": [
                        {
                            "system": "https://www.genenames.org/data/gene-symbol-report/#!/hgnc_id/",
                            "id": "6298",
                            "mapping": "exactMatch"
                        },
                        {
                            "system": "https://www.ncbi.nlm.nih.gov/gene/",
                            "id": "9132",
                            "mapping": "exactMatch"
                        },
                        {
                            "system": "https://omim.org/entry/",
                            "id": "603537",
                            "mapping": "exactMatch"
                        },
                        {
                            "system": "http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=",
                            "id": "ENSG00000117013",
                            "mapping": "exactMatch"
                        }
                    ],
                    // we need to make a concerted effort to finalize the modeling of "gene" 
                    // but the idea here is that "gene" is a kind of canonical "feature" 
                    // (currently using "SequenceLocation" in place of "Feature") which could 
                    // be represented using an "originating" or "genomic" context that is the 
                    // sequence location a given "authority" uses to define all mapped/aligned 
                    //representations of the gene.  HGNC appears to be the best choice for 
                    // interoperability at this time.
                    "defining_context": {
                        "id": "geneloc1",
                        "digest": "xxxx...",
                        "type": "SequenceLocation",
                        "sequence": {
                            "reference": "#/sequences/seq1"
                        },
                        "start": 40783787,
                        "end": 40840452
                    },
                    "extensions": [
                        {
                            "name": "previous_symbols",
                            "value": [
                                "DFNA2"
                            ]
                        }
                    ]
                }
            ],
            "extensions": [
                {
                    "name": "cytogenetic location",
                    "value": "1p34.2"   // could have put this under a specific context (sequenceLocation)
                                        // but thought it made sense at the clinvar variation level. 
                                        // this makes it easier to find i think.
                },
                {
                    "name": "protein change",
                    "value": "S269del"
                },
                {
                    "name": "clinvar allele id",
                    "value": "204595"
                }
            ]
        }
    },
    "classifications": {
        "path": {
            "system": "https://.../clinicalgenome.org/clinvar_classifications/", // need a system for clinvar_classifications terms?
            "id": "100-1",
            "label": "Pathogenic"
        },
        "deleterious": {
            // is this the equivalent of a blank node in JSON-LD?
            "label": "deleterious"
        }
    },
    "statements": {

        // {Provenance - how/where are we going to inject that information so that it is clear to consumers
       //  "this was produced under the CRC policy 1-2-3" ...}

        "SCV001245167.1": {
            "id": "SCV001245167.1.2023-04-10",
            // version? should we have a separate field or embed it in the id or both?

            "is_version_of" : "SCV001245167",   // align with MBrush's plan - should this be on the Entity class or somewhere lower in the class hierarchy?

            "type": "VariationPathogenicity",
            
            "variation":  "#/variations/clinvar_208366",

            //predicate: "is_causal_for",   this was Alex's decision and Tristan was okay with it. (i'm still thinking about it)  predicate is type, type is predicate
            
            // -- I do think that the "assessment" should be bundled as a single concept.

            //classification :  Path | Likely Path | Established RA | VUS | Lik Ben ...
            // all of these "codings" need to have the option to put in non-coded values, 
            // we CANNOT pre-code everything or we need a way to pass "uncoded data"
            "classification" :  "#/classifications/path",

            // direction : supports | refutes | uncertain
            "direction": "uncertain",           
            
            // evidence_strength : definitive | likely | inconclusive (prefer over uncertain plus it helps differentiate)
            // // evidence_score : 0-9  ...   the closer to 0 the more uncertain it is!
            // "score": "0.5",      // the score is coming in acmgv4
            "strength_code": {   
                "system": "acmgv3",   // need a system for acgmv3.strength terms
                "id": "100-2",
                "label": "inconclusive"
                // since other systems may have altered definitions of the same terms we MUST code this.
            },
            "strength_score" : 0.5,
            
            // TN/LB Desicion: we will likely use a clingen namespace to define codes.

            //penetrance : "risk" | "low" | "high" | leave it blank
            "penetrance": {
                "system":"",
                "id":"",
                "label":"risk"     // our own enums? (high, low, risk, or leave this out if truly unable to discern)
            },
            
            
            // in a vp statement a condition is ... the condition that the variant is (or is not) causal for (or at risk for)
            "condition": "#/conditions/cond1",

            // need to think through whether this is structured correctly. but this separable concept is key
            "qualifiers": {
                // mode of inheritance / inheritance pattern (embed with condition?  )
                "inheritancePattern": {
                    "label":"autosomal dominant"
                },
                "alleleOrigin": {
                    "label": "germline"
                }
            },

            "contribution": {




            },

            "method": {
                "label": "ACMG Criteria v3"
            },

            "description": "The c.806_808delCCT (p.Ser269del) variant in KCNQ4 has been observed in at least 4 probands with hearing loss (PS4_Supporting; PMID: 23399560, 23443030, LMM unpublished data SCV000967428.1). This variant segregated with hearing loss in 12 additional individuals from 1 family (PP1_Strong; PMID: 23443030). The p.Ser269del variant was absent from large population studies (PM2; https://gnomad.broadinstitute.org). This variant causes a change in the length of the protein due to an in-frame deletion between the S5 membrane-spanning domain and the pore region, which is important for protein function (PM4). In summary, this variant meets criteria to be classified as likely pathogenic for autosomal dominant nonsyndromic hearing loss. ACMG/AMP Criteria applied as specified by the Hearing Loss Expert Panel: PP1_Strong, PM2, PM4, PS4_Supporting. "

            // clinvar review status (star level) - is this a 
            // "special clinvar thing" (i think so) it's not a standard that I know of 
            

            //evidence 
            //-- pubmed references
            "documents": [{

            }],
            // extensions...
            "extensions": [{
                "name":"submitter_classification_info",
                "value": "deleterious"
            },{
                "name":"submitted_variation_info",
                "value":"..."
            },{
                "name":"submitted_condition_info",
                "value":"..."
            }]
            // functional evidence 
            // (should this data be a separate type of assertion or evidence to a classification?) 
            // Much of the functional data in clinvar does not have an associated classification.
        }
    }
}