{
   "$schema": "http://json-schema.org/draft-07/schema",
   "title": "Cohort Allele Frequency",
   "type": "object",
   "definitions": {
      "GrpMaxFAF95": {
         "type": "object",
         "properties": {
            "frequency": {
               "type": "number"
            },
            "confidenceInterval": {
               "type": "number",
               "const": 0.95,
               "default": 0.95
            },
            "groupId": {
               "type": "string",
               "description": "The genetic ancestry group from which the max frequency was calculated."
            }
         },
         "required": [
            "frequency",
            "confidenceInterval",
            "groupId"
         ],
         "additionalProperties": false
      },
      "Allele": {
         "description": "The state of a molecule at a Location.",
         "type": "object",
         "properties": {
            "_id": {
               "$ref": "#/definitions/CURIE",
               "description": "Variation Id. MUST be unique within document."
            },
            "type": {
               "type": "string",
               "const": "Allele",
               "default": "Allele",
               "description": "MUST be \"Allele\""
            },
            "location": {
               "oneOf": [
                  {
                     "$ref": "#/definitions/CURIE"
                  },
                  {
                     "$ref": "#/definitions/SequenceLocation"
                  }
               ],
               "description": "Where Allele is located"
            },
            "state": {
               "$ref": "#/definitions/LiteralSequenceExpression",
               "description": "An expression of the sequence state"
            }
         },
         "required": [
            "location",
            "state",
            "type"
         ],
         "additionalProperties": false
      },
      "SequenceLocation": {
         "description": "A Location defined by an interval on a referenced Sequence.",
         "type": "object",
         "properties": {
            "_id": {
               "$ref": "#/definitions/CURIE",
               "description": "Location Id. MUST be unique within document."
            },
            "type": {
               "type": "string",
               "const": "SequenceLocation",
               "default": "SequenceLocation",
               "description": "MUST be \"SequenceLocation\""
            },
            "sequence_id": {
               "$ref": "#/definitions/CURIE",
               "description": "A VRS Computed Identifier for the reference Sequence."
            },
            "interval": {
               "$ref": "#/definitions/SequenceInterval",
               "description": "Reference sequence region defined by a SequenceInterval."
            }
         },
         "required": [
            "interval",
            "sequence_id",
            "type"
         ],
         "additionalProperties": false
      },
      "SequenceInterval": {
         "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
         "type": "object",
         "properties": {
            "type": {
               "type": "string",
               "const": "SequenceInterval",
               "default": "SequenceInterval",
               "description": "MUST be \"SequenceInterval\""
            },
            "start": {
               "oneOf": [
                  {
                     "$ref": "#/definitions/DefiniteRange"
                  },
                  {
                     "$ref": "#/definitions/IndefiniteRange"
                  },
                  {
                     "$ref": "#/definitions/Number"
                  }
               ],
               "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
            },
            "end": {
               "oneOf": [
                  {
                     "$ref": "#/definitions/DefiniteRange"
                  },
                  {
                     "$ref": "#/definitions/IndefiniteRange"
                  },
                  {
                     "$ref": "#/definitions/Number"
                  }
               ],
               "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
            }
         },
         "required": [
            "end",
            "start",
            "type"
         ],
         "additionalProperties": false
      },
      "LiteralSequenceExpression": {
         "description": "An explicit expression of a Sequence.",
         "type": "object",
         "properties": {
            "type": {
               "type": "string",
               "const": "LiteralSequenceExpression",
               "default": "LiteralSequenceExpression",
               "description": "MUST be \"LiteralSequenceExpression\""
            },
            "sequence": {
               "$ref": "#/definitions/Sequence",
               "description": "the literal Sequence expressed"
            }
         },
         "required": [
            "sequence",
            "type"
         ],
         "additionalProperties": false
      },
      "Number": {
         "description": "A simple integer value as a VRS class.",
         "type": "object",
         "properties": {
            "type": {
               "type": "string",
               "const": "Number",
               "default": "Number",
               "description": "MUST be \"Number\""
            },
            "value": {
               "type": "integer",
               "description": "The value represented by Number"
            }
         },
         "required": [
            "type",
            "value"
         ],
         "additionalProperties": false
      },
      "DefiniteRange": {
         "description": "A bounded, inclusive range of numbers.",
         "type": "object",
         "properties": {
            "type": {
               "type": "string",
               "const": "DefiniteRange",
               "default": "DefiniteRange",
               "description": "MUST be \"DefiniteRange\""
            },
            "min": {
               "type": "number",
               "description": "The minimum value; inclusive"
            },
            "max": {
               "type": "number",
               "description": "The maximum value; inclusive"
            }
         },
         "required": [
            "max",
            "min",
            "type"
         ],
         "additionalProperties": false
      },
      "IndefiniteRange": {
         "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
         "type": "object",
         "properties": {
            "type": {
               "type": "string",
               "const": "IndefiniteRange",
               "default": "IndefiniteRange",
               "description": "MUST be \"IndefiniteRange\""
            },
            "value": {
               "type": "number",
               "description": "The bounded value; inclusive"
            },
            "comparator": {
               "type": "string",
               "enum": [
                  "<=",
                  ">="
               ],
               "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
            }
         },
         "required": [
            "comparator",
            "type",
            "value"
         ],
         "additionalProperties": false
      },
      "CURIE": {
         "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
         "type": "string",
         "pattern": "^\\w[^:]*:.+$",
         "example": "ensembl:ENSG00000139618"
      },
      "Residue": {
         "description": "A character representing a specific residue (i.e., molecular species) or groupings of these (\"ambiguity codes\"), using [one-letter IUPAC abbreviations](https://en.wikipedia.org/wiki/International_Union_of_Pure_and_Applied_Chemistry#Amino_acid_and_nucleotide_base_codes) for nucleic acids and amino acids.",
         "type": "string",
         "pattern": "[A-Z*\\-]"
      },
      "Sequence": {
         "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
         "type": "string",
         "pattern": "^[A-Z*\\-]*$"
      }
   },
   "properties": {
      "id": {
         "type": "string"
      },
      "type": {
         "type": "string",
         "const": "CohortAlleleFrequency",
         "default": "CohortAlleleFrequency"
      },
      "label": {
         "type": "string"
      },
      "derivedFrom": {
         "type": "object",
         "properties": {
            "id": {
               "type": "string"
            },
            "type": {
               "type": "string"
            },
            "label": {
               "type": "string"
            },
            "version": {
               "type": "string"
            },
            "additionalProperties": false
         }
      },
      "focusAllele": {
         "oneOf": [
            {
               "$ref": "#/definitions/Allele"
            },
            {
               "type": "string",
               "format": "uri-reference"
            }
         ]
      },
      "focusAlleleCount": {
         "type": "integer"
      },
      "locusAlleleCount": {
         "type": "integer"
      },
      "alleleFrequency": {
         "type": "number"
      },
      "cohort": {
         "type": "object",
         "properties": {
            "id": {
               "type": "string"
            },
            "label": {
               "type": "string"
            },
            "characteristics": {
               "type": "array",
               "items": {
                  "type": "object",
                  "properties": {
                     "name": {
                        "type": "string"
                     },
                     "value": {
                        "type": "string"
                     }
                  },
                  "required": [
                     "name",
                     "value"
                  ],
                  "additionalProperties": false
               }
            }
         },
         "additionalProperties": false,
         "required": [
            "id"
         ]
      },
      "ancillaryResults": {
         "type": "object",
         "properties": {
            "grpMaxFAF95": {
               "$ref": "#/$defs/GrpMaxFAF95"
            },
            "jointGrpMaxFAF95": {
               "description": "The Group Max Filtering Allele Frequency (95% confidence interval) calculated jointly from genome and exome data.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/GrpMaxFAF95"
                  },
                  {
                     "type": null
                  }
               ]
            },
            "homozygotes": {
               "type": "integer"
            },
            "hemizygotes": {
               "type": "integer"
            }
         },
         "additionalProperties": false
      },
      "qualityMeasures": {
         "type": "object",
         "properties": {
            "meanDepth": {
               "type": "number"
            },
            "qcFilters": {
               "type": "array",
               "items": {
                  "type": "string"
               }
            },
            "monoallelic": {
               "description": "All samples are homozygous alternate for the variant.",
               "type": "boolean"
            },
            "lowComplexityRegion": {
               "description": "This flag indicates the variant is found in a low complexity region. These regions were identified  with the symmetric DUST algorithm at a score threshold of 30.",
               "type": "boolean"
            },
            "lowConfidenceLossOfFunctionError": {
               "description": "Low confidence in predicted Loss of Function (pLoF), where variant is determined by LOFTEE  to be unlikely loss of function for a transcript.",
               "type": "boolean"
            },
            "lossOfFunctionWarning": {
               "description": "A warning provided by LOFTEE to use caution when interpreting the transcript or variant.",
               "type": "boolean"
            },
            "noncodingTranscriptError": {
               "description": "Marked in a putative loss of function category by VEP (essential splice, stop-gained, or frameshift)  but appears on a non-protein-coding transcript.",
               "type": "boolean"
            },
            "heterozygousSkewedAlleleCount": {
               "description": "The count of individuals called as heterozygous for this variant with a skewed allele balance, indicating some of these individuals may be miscalled homozygous alternative allele.",
               "type": "integer"
            }
         },
         "additionalProperties": false
      },
      "subcohortFrequency": {
         "type": "array",
         "items": {
            "$ref": "#"
         }
      }
   },
   "required": [
      "id",
      "type",
      "focusAllele",
      "focusAlleleCount",
      "locusAlleleCount",
      "alleleFrequency",
      "cohort"
   ],
   "additionalProperties": false
}